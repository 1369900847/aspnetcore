@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Options
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@*#if (Hosted)
@inject IOptions<RemoteAuthenticationOptions<ApiAuthorizationProviderOptions>> Options
#else
@inject IOptions<RemoteAuthenticationOptions<OidcProviderOptions>> Options
#endif*@

<AuthorizeView>
@*#if (Hosted)
    <Authorized>
        <a href="@Options.Value.AuthenticationPaths.ProfilePath">Hello, @context.User.Identity.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="@Options.Value.AuthenticationPaths.RegisterPath">Register</a>
        <a href="@Options.Value.AuthenticationPaths.LoginPath">Log in</a>
    </NotAuthorized>
  #else
    <Authorized>
        Hello, @context.User.Identity.Name!
        <button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="@Options.Value.AuthenticationPaths.LoginPath">Log in</a>
    </NotAuthorized>
##endif*@
</AuthorizeView>

@code{
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo(Options.Value.AuthenticationPaths.LogoutPath);
    }
}
